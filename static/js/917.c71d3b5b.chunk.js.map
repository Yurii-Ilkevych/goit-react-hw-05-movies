{"version":3,"file":"static/js/917.c71d3b5b.chunk.js","mappings":"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","sources":["api/fetchMovieDetails.js","stylePages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst fetchMovieDetails = async id => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YWI4YTU2N2U4NTIwYjJkOTYxNmQyYjU1NGY1MGI4MyIsInN1YiI6IjY0Nzg5MDY0MDc2Y2U4MDEwNzliOGMxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2ia6cdeIOjpNaTQl8aCiS1rstAtEfICJgybU1GCz5mQ',\n    },\n  };\n  try {\n    const result = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    );\n    return result;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default fetchMovieDetails;\n","import styled from '@emotion/styled'\nimport { Link } from 'react-router-dom'\n\nconst GoBack = styled(Link)`\ntext-decoration: none;\n  color: rgb(99, 18, 18);\nfont-size: large;\nfont-weight: 700;\n&:hover {\n    color: rgb(140, 81, 81);;\n}\n`\n\nconst Wrapper = styled.div`\npadding: 10px 0px 10px 0px;\nborder-bottom: 1px solid black;\n`\n\nconst LinkMovie = styled(Link)`\ntext-decoration: none;\n  color: rgb(99, 18, 18);\n&:hover {\n    color: rgb(140, 81, 81);;\n}\n`\nconst WrapperUl = styled.ul`\nlist-style: none;\npadding: 10px 0px 10px 0px;\nborder-bottom: 1px solid black;\n`\nexport {GoBack, Wrapper, LinkMovie, WrapperUl}","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport fetchMovieDetails from '../api/fetchMovieDetails';\nimport defaultPoster from '../img/Frame770814.png';\nimport {\n  GoBack,\n  Wrapper,\n  LinkMovie,\n  WrapperUl,\n} from '../stylePages/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [linkBack, setLinkBack] = useState('/movies');\n  const { movieId } = useParams();\n  const [statusPending, setStatusPending] = useState(false);\n  const [statusErrorServer, setStatusErrorServer] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(result => {\n      if (result) {\n        setMovie(result.data);\n        setStatusPending(true);\n        return;\n      } else if (!result) setMovie(null);\n      setStatusErrorServer(true);\n    });\n\n    if (!location.state?.from) {\n      return;\n    }\n    const goBack = location.state?.from ?? '/movies';\n    setLinkBack(goBack);\n    return () => {\n      setStatusErrorServer(false);\n    };\n  }, [location.state?.from, movieId]);\n\n  const getImg = movie => {\n    const { backdrop_path, poster_path } = movie;\n    if (poster_path) {\n      return `https://image.tmdb.org/t/p/original/${poster_path}`;\n    } else if (backdrop_path) {\n      return `https://image.tmdb.org/t/p/original/${backdrop_path}`;\n    } else {\n      return defaultPoster;\n    }\n  };\n\n  const getTitle = movie => {\n    const { title, name } = movie;\n    if (title) {\n      return title;\n    } else if (name) {\n      return name;\n    } else {\n      return 'No name';\n    }\n  };\n\n  const getUserScore = userScore => {\n    if (userScore) {\n      return `${(userScore * 10).toFixed()}%`;\n    } else {\n      return 'No user score';\n    }\n  };\n\n  const getOwerviev = overview => {\n    if (overview) {\n      return overview;\n    } else {\n      return 'No owerview';\n    }\n  };\n\n  const getGenre = genres => {\n    if (genres) {\n      const genresMovie = genres.map(genre => genre.name);\n      return genresMovie.join(', ');\n    } else {\n      return 'No genre';\n    }\n  };\n\n  const getYear = ({ release_date, first_air_date }) => {\n    if (release_date) {\n      return release_date.split('').slice(0, 4).join('');\n    } else if (first_air_date) {\n      return first_air_date.split('').slice(0, 4).join('');\n    } else {\n      return 'No date';\n    }\n  };\n\n  return (\n    <div>\n      <GoBack to={linkBack}>‚Üê go back</GoBack>\n      {statusPending ? (\n        <Wrapper>\n          <div>\n            <img\n              src={getImg(movie)}\n              alt={getTitle(movie)}\n              width={160}\n              height={180}\n            ></img>\n          </div>\n          <h2>\n            {getTitle(movie)} <span>({getYear(movie)})</span>\n          </h2>\n          <p>User Score: {getUserScore(movie.vote_average)}</p>\n          <h3>Owerview</h3>\n          <p>{getOwerviev(movie.overview)}</p>\n          <h3>Genre</h3>\n          <p>{getGenre(movie.genres)}</p>\n        </Wrapper>\n      ) : (\n        <Wrapper>\n          <div>\n            <img\n              src={defaultPoster}\n              alt=\"poster\"\n              width={160}\n              height={180}\n            ></img>\n          </div>\n          <h2>\n            Title <span>(....)</span>\n          </h2>\n          <p>User Score: ...%</p>\n          <h3>Owerview</h3>\n          <p>...</p>\n          <h3>Genre</h3>\n          <p>...</p>\n        </Wrapper>\n      )}\n      {statusErrorServer && <h2>Server response error</h2>}\n      <WrapperUl>\n        <h3>Additional information</h3>\n        <li>\n          <LinkMovie to=\"cast\">Cast</LinkMovie>\n        </li>\n        <li>\n          <LinkMovie to=\"reviews\">Reviews</LinkMovie>\n        </li>\n      </WrapperUl>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovieDetails","id","options","method","headers","accept","Authorization","axios","result","GoBack","styled","Link","Wrapper","LinkMovie","WrapperUl","useState","movie","setMovie","linkBack","setLinkBack","movieId","useParams","statusPending","setStatusPending","statusErrorServer","setStatusErrorServer","location","useLocation","useEffect","then","data","state","from","goBack","genres","overview","userScore","getTitle","title","name","to","src","backdrop_path","poster_path","defaultPoster","getImg","alt","width","height","release_date","first_air_date","split","slice","join","getYear","vote_average","toFixed","map","genre","Suspense","fallback"],"sourceRoot":""}