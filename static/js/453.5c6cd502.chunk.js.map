{"version":3,"file":"static/js/453.5c6cd502.chunk.js","mappings":"gPAEMA,EAAUC,EAAAA,EAAAA,GAAH,2CAIPC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sH,SCoBX,EAvBsB,SAAC,GAAc,IAAbG,EAAY,EAAZA,OACtBC,GAAWC,EAAAA,EAAAA,MACb,OACI,SAACN,EAAD,UACII,EAAOG,KAAI,SAAAC,GAAU,IAAD,EACpB,OAAM,yBAAmB,UAACN,EAAD,CAAWO,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAAnD,eAA+D,kCAAKG,EAAMK,aAAX,QAAoBL,EAAMM,WAAnGN,EAAME,GACrB,KAIP,E,oCCXCK,EAAmB,mCAAG,6FAErBC,EAAU,CACfC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NANS,kBAULC,EAAAA,EAAAA,IAAU,gDAAiDL,GAVtD,cAUtBM,EAVsB,yBAWrBA,GAXqB,wHAAH,qDAiBzB,ICoBA,EApCa,WACX,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAsBA,OArBAC,EAAAA,EAAAA,YAAU,WAcN,OAbFjB,IACGkB,MAAK,SAAAX,GACAA,GACFK,GAAiB,GACjBF,EAAkBH,EAASY,KAAKC,UACxBb,EAEgC,IAAjCA,EAASY,KAAKC,QAAQC,QAC7BP,GAAY,GAFZE,GAAe,EAKlB,IAEM,WACLJ,GAAiB,GACjBE,GAAY,GACZE,GAAe,EAClB,CACF,GAAE,KAGD,4BACE,0CACCL,IAAiB,SAAC,EAAD,CAAmBtB,OAAQoB,IAC5CI,IAAY,8DACZE,IAAe,oDAGrB,C","sources":["components/RenderTrendsMovie/RenderTrendsMovie.styled.js","components/RenderTrendsMovie/RenderTrendsMovie.js","components/APi/fetchTrandingMovies.js","pages/Home.js"],"sourcesContent":["import styled from '@emotion/styled'\nimport { Link } from 'react-router-dom'\nconst Wrapper = styled.ul`\nlist-style: none;\n`\n\nconst LinkMovie = styled(Link)`\ntext-decoration: none;\ncolor: rgb(99, 18, 18);\n&:hover {\n    color: rgb(140, 81, 81);;\n}\n`\n\n\nexport {Wrapper, LinkMovie}","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { Wrapper, LinkMovie } from \"./RenderTrendsMovie.styled\";\nconst RenderTrendsMovie = ({movies}) => {\nconst location = useLocation()\n    return(\n        <Wrapper>\n           {movies.map(movie => {\n            return<li key={movie.id}><LinkMovie to={`movies/${movie.id}`} state={{from: location}}> <h3>{movie.title ?? movie.name}</h3></LinkMovie></li>\n           })}\n        </Wrapper>\n        \n    )\n    }\n    \n\n    RenderTrendsMovie.propTypes = {\n        movies: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string,\n            name: PropTypes.string,\n          })\n        ).isRequired,\n      };\n\n    export default RenderTrendsMovie","import axios from 'axios';\n\nconst fetchTrandingMovies = async () => {\n\n const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YWI4YTU2N2U4NTIwYjJkOTYxNmQyYjU1NGY1MGI4MyIsInN1YiI6IjY0Nzg5MDY0MDc2Y2U4MDEwNzliOGMxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2ia6cdeIOjpNaTQl8aCiS1rstAtEfICJgybU1GCz5mQ'\n  }\n};\ntry {\nconst response = await axios.get(\"https://api.themoviedb.org/3/trending/all/day\", options)\nreturn response\n} catch (error) {\nreturn error\n}\n\n  }\nexport default fetchTrandingMovies ","import { useState, useEffect } from 'react';\nimport RenderTrendsMovie from '../components/RenderTrendsMovie/RenderTrendsMovie';\nimport fetchTrandingMovies from '../components/APi/fetchTrandingMovies';\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [statusPending, setStatusPending] = useState(false);\n  const [notFaund, setNotFound] = useState(false);\n  const [errorServer, setErrorServer] = useState(false);\n  useEffect(() => {\n    fetchTrandingMovies()\n      .then(response => {\n        if (response) {\n          setStatusPending(true);\n          setTrendingMovies(response.data.results);\n        }else if(!response){\n          setErrorServer(true)\n        }else if(response.data.results.length === 0){\n          setNotFound(true)\n        }\n\n      })\n\n      return ()=> {\n        setStatusPending(false)\n        setNotFound(false)\n        setErrorServer(false)\n    }\n  }, []);\n\n  return (\n    <div>\n      <h2>Treding Today</h2>\n      {statusPending && <RenderTrendsMovie movies={trendingMovies} />}\n      {notFaund && <h2>We don't have any trends movies\"</h2>}\n      {errorServer && <h2>Server response error</h2>}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Wrapper","styled","LinkMovie","Link","movies","location","useLocation","map","movie","to","id","state","from","title","name","fetchTrandingMovies","options","method","headers","accept","Authorization","axios","response","useState","trendingMovies","setTrendingMovies","statusPending","setStatusPending","notFaund","setNotFound","errorServer","setErrorServer","useEffect","then","data","results","length"],"sourceRoot":""}