{"version":3,"file":"static/js/946.7e83a70c.chunk.js","mappings":"wPAEMA,EAAY,mCAAG,WAAMC,GAAN,gFACbC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANa,kBAUMC,EAAAA,EAAAA,IAAA,6CACiBN,EADjB,2BAErBC,GAZe,cAUXM,EAVW,yBAcVA,EAASC,KAAKC,SAdJ,wHAAH,sDAoBlB,I,SCpBMC,E,OAAYC,EAAAA,GAAH,yG,SCyEf,EAtEgB,WAEd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0CH,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAAkDN,EAAAA,EAAAA,WAAS,GAA3D,eAAOO,EAAP,KAA0BC,EAA1B,KACA,GAA4CR,EAAAA,EAAAA,WAAS,GAArD,eAAOS,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WAcR,OAbAxB,EAAagB,GAASS,MAAK,SAAAf,GACrBA,GAA8B,IAAnBA,EAAQgB,QACrBX,EAAWL,GACXS,GAAiB,IACPT,GACVW,GAAqB,GAGA,IAAnBX,EAAQgB,QACVH,GAAkB,EAErB,IAEM,WACLA,GAAkB,GAClBJ,GAAiB,GACjBJ,EAAW,MACXM,GAAqB,EACtB,CACF,GAAE,CAACL,IAEJ,IAAMW,EAAW,SAAAC,GACf,IAAQC,EAAWD,EAAXC,OACR,OAAIA,GAGK,WAEV,EACKC,EAAa,SAAAF,GACjB,IAAQG,EAAYH,EAAZG,QAER,OAAIA,GAGK,YAEV,EAED,OACE,+BACGb,IACC,SAACP,EAAD,UACGG,EAAQkB,KAAI,SAAAJ,GACX,OACE,2BACE,sCACU,0BAAOD,EAASC,SAE1B,uBAAIE,EAAWF,OAJRA,EAAO3B,GAOnB,MAGJmB,IAAqB,kDACrBE,IAAkB,uEAGxB,C","sources":["api/fetchReviews.js","components/Reviews/Rewievs.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst fetchRewievs = async id => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YWI4YTU2N2U4NTIwYjJkOTYxNmQyYjU1NGY1MGI4MyIsInN1YiI6IjY0Nzg5MDY0MDc2Y2U4MDEwNzliOGMxNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2ia6cdeIOjpNaTQl8aCiS1rstAtEfICJgybU1GCz5mQ',\n    },\n  };\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US`,\n      options\n    );\n    return response.data.results;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default fetchRewievs;\n","import styled from '@emotion/styled'\n\nconst WrapperUl = styled.ul`\nlist-style: none;\npadding: 10px 0px 10px 0px;\nborder-bottom: 1px solid black;\n`\n\nexport {WrapperUl}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchRewievs from '../../api/fetchReviews';\nimport { WrapperUl } from './Rewievs.styled';\n\nconst Reviews = () => {\n\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  const [statusPending, setStatusPending] = useState(false);\n  const [statusErrorServer, setStatusErrorServer] = useState(false);\n  const [statusNotFaund, setStatusNotFound] = useState(false);\n\n  useEffect(() => {\n    fetchRewievs(movieId).then(results => {\n      if (results && results.length !== 0) {\n        setReviews(results);\n        setStatusPending(true);\n      } else if (!results) {\n        setStatusErrorServer(true);\n      }\n\n      if (results.length === 0) {\n        setStatusNotFound(true);\n      }\n    });\n\n    return () => {\n      setStatusNotFound(false);\n      setStatusPending(false);\n      setReviews(null);\n      setStatusErrorServer(false);\n    };\n  }, [movieId]);\n\n  const getAutor = review => {\n    const { author } = review;\n    if (author) {\n      return author;\n    } else {\n      return 'No author';\n    }\n  };\n  const getReviews = review => {\n    const { content } = review;\n\n    if (content) {\n      return content;\n    } else {\n      return 'No content';\n    }\n  };\n\n  return (\n    <section>\n      {statusPending && (\n        <WrapperUl>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>\n                  Author: <span>{getAutor(review)}</span>\n                </h3>\n                <p>{getReviews(review)}</p>\n              </li>\n            );\n          })}\n        </WrapperUl>\n      )}\n      {statusErrorServer && <h2>Server response error</h2>}\n      {statusNotFaund && <h2>We don't have any reviews for this movie</h2>}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchRewievs","id","options","method","headers","accept","Authorization","axios","response","data","results","WrapperUl","styled","useState","reviews","setReviews","movieId","useParams","statusPending","setStatusPending","statusErrorServer","setStatusErrorServer","statusNotFaund","setStatusNotFound","useEffect","then","length","getAutor","review","author","getReviews","content","map"],"sourceRoot":""}